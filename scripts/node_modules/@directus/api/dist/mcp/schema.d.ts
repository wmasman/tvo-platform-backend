import { z } from 'zod';
export declare const PrimaryKeyInputSchema: z.ZodUnion<readonly [z.ZodNumber, z.ZodString]>;
export declare const PrimaryKeyValidateSchema: z.ZodUnion<readonly [z.ZodNumber, z.ZodString]>;
export declare const ItemInputSchema: z.ZodRecord<z.ZodString, z.ZodAny>;
export declare const ItemValidateSchema: z.ZodRecord<z.ZodString, z.ZodAny>;
export declare const QueryInputSchema: z.ZodObject<{
    fields: z.ZodOptional<z.ZodArray<z.ZodString>>;
    sort: z.ZodOptional<z.ZodArray<z.ZodString>>;
    filter: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodAny>>;
    limit: z.ZodOptional<z.ZodNumber>;
    offset: z.ZodOptional<z.ZodNumber>;
    page: z.ZodOptional<z.ZodNumber>;
    search: z.ZodOptional<z.ZodString>;
    deep: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodAny>>;
    alias: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
    aggregate: z.ZodOptional<z.ZodObject<{
        count: z.ZodArray<z.ZodString>;
        sum: z.ZodArray<z.ZodString>;
        avg: z.ZodArray<z.ZodString>;
        min: z.ZodArray<z.ZodString>;
        max: z.ZodArray<z.ZodString>;
    }, z.core.$strip>>;
    backlink: z.ZodOptional<z.ZodBoolean>;
    version: z.ZodOptional<z.ZodString>;
    versionRaw: z.ZodOptional<z.ZodBoolean>;
    export: z.ZodOptional<z.ZodString>;
    group: z.ZodOptional<z.ZodArray<z.ZodString>>;
}, z.core.$strip>;
export declare const QueryValidateSchema: z.ZodObject<{
    fields: z.ZodOptional<z.ZodArray<z.ZodString>>;
    sort: z.ZodOptional<z.ZodArray<z.ZodString>>;
    filter: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodAny>>;
    limit: z.ZodOptional<z.ZodNumber>;
    offset: z.ZodOptional<z.ZodNumber>;
    page: z.ZodOptional<z.ZodNumber>;
    search: z.ZodOptional<z.ZodString>;
    deep: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodAny>>;
    alias: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
    aggregate: z.ZodOptional<z.ZodObject<{
        count: z.ZodArray<z.ZodString>;
        sum: z.ZodArray<z.ZodString>;
        avg: z.ZodArray<z.ZodString>;
        min: z.ZodArray<z.ZodString>;
        max: z.ZodArray<z.ZodString>;
    }, z.core.$strip>>;
    backlink: z.ZodOptional<z.ZodBoolean>;
    version: z.ZodOptional<z.ZodString>;
    versionRaw: z.ZodOptional<z.ZodBoolean>;
    export: z.ZodOptional<z.ZodString>;
    group: z.ZodOptional<z.ZodArray<z.ZodString>>;
}, z.core.$strip>;
export declare const RawFieldItemInputSchema: z.ZodObject<{
    field: z.ZodString;
    type: z.ZodString;
    name: z.ZodOptional<z.ZodString>;
    children: z.ZodOptional<z.ZodUnion<readonly [z.ZodArray<z.ZodRecord<z.ZodString, z.ZodAny>>, z.ZodNull]>>;
    collection: z.ZodOptional<z.ZodString>;
    schema: z.ZodOptional<z.ZodUnion<readonly [z.ZodRecord<z.ZodString, z.ZodAny>, z.ZodNull]>>;
    meta: z.ZodOptional<z.ZodUnion<readonly [z.ZodRecord<z.ZodString, z.ZodAny>, z.ZodNull]>>;
}, z.core.$strip>;
export declare const RawFieldItemValidateSchema: z.ZodObject<{
    field: z.ZodString;
    type: z.ZodString;
    name: z.ZodOptional<z.ZodString>;
    children: z.ZodOptional<z.ZodUnion<readonly [z.ZodArray<z.ZodRecord<z.ZodString, z.ZodAny>>, z.ZodNull]>>;
    collection: z.ZodOptional<z.ZodString>;
    schema: z.ZodOptional<z.ZodUnion<readonly [z.ZodRecord<z.ZodString, z.ZodAny>, z.ZodNull]>>;
    meta: z.ZodOptional<z.ZodUnion<readonly [z.ZodRecord<z.ZodString, z.ZodAny>, z.ZodNull]>>;
}, z.core.$strip>;
export declare const FieldItemInputSchema: z.ZodObject<{
    field: z.ZodString;
    type: z.ZodNullable<z.ZodString>;
    name: z.ZodOptional<z.ZodString>;
    collection: z.ZodOptional<z.ZodString>;
    schema: z.ZodOptional<z.ZodUnion<readonly [z.ZodRecord<z.ZodString, z.ZodAny>, z.ZodNull]>>;
    meta: z.ZodOptional<z.ZodUnion<readonly [z.ZodRecord<z.ZodString, z.ZodAny>, z.ZodNull]>>;
}, z.core.$strip>;
export declare const FieldItemValidateSchema: z.ZodObject<{
    field: z.ZodString;
    type: z.ZodNullable<z.ZodString>;
    name: z.ZodOptional<z.ZodString>;
    collection: z.ZodOptional<z.ZodString>;
    schema: z.ZodOptional<z.ZodUnion<readonly [z.ZodRecord<z.ZodString, z.ZodAny>, z.ZodNull]>>;
    meta: z.ZodOptional<z.ZodUnion<readonly [z.ZodRecord<z.ZodString, z.ZodAny>, z.ZodNull]>>;
}, z.core.$strip>;
export declare const CollectionItemInputSchema: z.ZodObject<{
    collection: z.ZodString;
    fields: z.ZodOptional<z.ZodArray<z.ZodObject<{
        field: z.ZodString;
        type: z.ZodString;
        name: z.ZodOptional<z.ZodString>;
        children: z.ZodOptional<z.ZodUnion<readonly [z.ZodArray<z.ZodRecord<z.ZodString, z.ZodAny>>, z.ZodNull]>>;
        collection: z.ZodOptional<z.ZodString>;
        schema: z.ZodOptional<z.ZodUnion<readonly [z.ZodRecord<z.ZodString, z.ZodAny>, z.ZodNull]>>;
        meta: z.ZodOptional<z.ZodUnion<readonly [z.ZodRecord<z.ZodString, z.ZodAny>, z.ZodNull]>>;
    }, z.core.$strip>>>;
    meta: z.ZodOptional<z.ZodUnion<readonly [z.ZodRecord<z.ZodString, z.ZodAny>, z.ZodNull]>>;
    schema: z.ZodOptional<z.ZodUnion<readonly [z.ZodObject<{}, z.core.$strip>, z.ZodNull]>>;
}, z.core.$strip>;
export declare const CollectionItemValidateCreateSchema: z.ZodObject<{
    collection: z.ZodString;
    fields: z.ZodOptional<z.ZodArray<z.ZodObject<{
        field: z.ZodString;
        type: z.ZodString;
        name: z.ZodOptional<z.ZodString>;
        children: z.ZodOptional<z.ZodUnion<readonly [z.ZodArray<z.ZodRecord<z.ZodString, z.ZodAny>>, z.ZodNull]>>;
        collection: z.ZodOptional<z.ZodString>;
        schema: z.ZodOptional<z.ZodUnion<readonly [z.ZodRecord<z.ZodString, z.ZodAny>, z.ZodNull]>>;
        meta: z.ZodOptional<z.ZodUnion<readonly [z.ZodRecord<z.ZodString, z.ZodAny>, z.ZodNull]>>;
    }, z.core.$strip>>>;
    meta: z.ZodOptional<z.ZodUnion<readonly [z.ZodRecord<z.ZodString, z.ZodAny>, z.ZodNull]>>;
    schema: z.ZodOptional<z.ZodUnion<readonly [z.ZodObject<{}, z.core.$strip>, z.ZodNull]>>;
}, z.core.$strip>;
export declare const CollectionItemValidateUpdateSchema: z.ZodObject<{
    collection: z.ZodString;
    meta: z.ZodOptional<z.ZodUnion<readonly [z.ZodRecord<z.ZodString, z.ZodAny>, z.ZodNull]>>;
    schema: z.ZodOptional<z.ZodUnion<readonly [z.ZodRecord<z.ZodString, z.ZodAny>, z.ZodNull]>>;
}, z.core.$strip>;
export declare const FileItemInputSchema: z.ZodObject<{
    id: z.ZodOptional<z.ZodString>;
    storage: z.ZodOptional<z.ZodString>;
    filename_disk: z.ZodOptional<z.ZodString>;
    filename_download: z.ZodOptional<z.ZodString>;
    title: z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodNull]>>;
    type: z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodNull]>>;
    folder: z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodNull]>>;
    created_on: z.ZodOptional<z.ZodString>;
    uploaded_by: z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodNull]>>;
    uploaded_on: z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodNull]>>;
    modified_by: z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodNull]>>;
    modified_on: z.ZodOptional<z.ZodString>;
    charset: z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodNull]>>;
    filesize: z.ZodOptional<z.ZodNumber>;
    width: z.ZodOptional<z.ZodUnion<readonly [z.ZodNumber, z.ZodNull]>>;
    height: z.ZodOptional<z.ZodUnion<readonly [z.ZodNumber, z.ZodNull]>>;
    duration: z.ZodOptional<z.ZodUnion<readonly [z.ZodNumber, z.ZodNull]>>;
    embed: z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodNull]>>;
    description: z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodNull]>>;
    location: z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodNull]>>;
    tags: z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodNull]>>;
    metadata: z.ZodOptional<z.ZodUnion<readonly [z.ZodRecord<z.ZodString, z.ZodAny>, z.ZodNull]>>;
    focal_point_x: z.ZodOptional<z.ZodUnion<readonly [z.ZodNumber, z.ZodNull]>>;
    focal_point_y: z.ZodOptional<z.ZodUnion<readonly [z.ZodNumber, z.ZodNull]>>;
    tus_id: z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodNull]>>;
    tus_data: z.ZodOptional<z.ZodUnion<readonly [z.ZodRecord<z.ZodString, z.ZodAny>, z.ZodNull]>>;
}, z.core.$strip>;
export declare const FileItemValidateSchema: z.ZodObject<{
    id: z.ZodOptional<z.ZodString>;
    storage: z.ZodOptional<z.ZodString>;
    filename_disk: z.ZodOptional<z.ZodString>;
    filename_download: z.ZodOptional<z.ZodString>;
    title: z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodNull]>>;
    type: z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodNull]>>;
    folder: z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodNull]>>;
    created_on: z.ZodOptional<z.ZodString>;
    uploaded_by: z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodNull]>>;
    uploaded_on: z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodNull]>>;
    modified_by: z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodNull]>>;
    modified_on: z.ZodOptional<z.ZodString>;
    charset: z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodNull]>>;
    filesize: z.ZodOptional<z.ZodNumber>;
    width: z.ZodOptional<z.ZodUnion<readonly [z.ZodNumber, z.ZodNull]>>;
    height: z.ZodOptional<z.ZodUnion<readonly [z.ZodNumber, z.ZodNull]>>;
    duration: z.ZodOptional<z.ZodUnion<readonly [z.ZodNumber, z.ZodNull]>>;
    embed: z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodNull]>>;
    description: z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodNull]>>;
    location: z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodNull]>>;
    tags: z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodNull]>>;
    metadata: z.ZodOptional<z.ZodUnion<readonly [z.ZodRecord<z.ZodString, z.ZodAny>, z.ZodNull]>>;
    focal_point_x: z.ZodOptional<z.ZodUnion<readonly [z.ZodNumber, z.ZodNull]>>;
    focal_point_y: z.ZodOptional<z.ZodUnion<readonly [z.ZodNumber, z.ZodNull]>>;
    tus_id: z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodNull]>>;
    tus_data: z.ZodOptional<z.ZodUnion<readonly [z.ZodRecord<z.ZodString, z.ZodAny>, z.ZodNull]>>;
}, z.core.$strip>;
export declare const FileImportItemInputSchema: z.ZodObject<{
    url: z.ZodString;
    file: z.ZodObject<{
        id: z.ZodOptional<z.ZodString>;
        storage: z.ZodOptional<z.ZodString>;
        filename_disk: z.ZodOptional<z.ZodString>;
        filename_download: z.ZodOptional<z.ZodString>;
        title: z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodNull]>>;
        type: z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodNull]>>;
        folder: z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodNull]>>;
        created_on: z.ZodOptional<z.ZodString>;
        uploaded_by: z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodNull]>>;
        uploaded_on: z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodNull]>>;
        modified_by: z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodNull]>>;
        modified_on: z.ZodOptional<z.ZodString>;
        charset: z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodNull]>>;
        filesize: z.ZodOptional<z.ZodNumber>;
        width: z.ZodOptional<z.ZodUnion<readonly [z.ZodNumber, z.ZodNull]>>;
        height: z.ZodOptional<z.ZodUnion<readonly [z.ZodNumber, z.ZodNull]>>;
        duration: z.ZodOptional<z.ZodUnion<readonly [z.ZodNumber, z.ZodNull]>>;
        embed: z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodNull]>>;
        description: z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodNull]>>;
        location: z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodNull]>>;
        tags: z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodNull]>>;
        metadata: z.ZodOptional<z.ZodUnion<readonly [z.ZodRecord<z.ZodString, z.ZodAny>, z.ZodNull]>>;
        focal_point_x: z.ZodOptional<z.ZodUnion<readonly [z.ZodNumber, z.ZodNull]>>;
        focal_point_y: z.ZodOptional<z.ZodUnion<readonly [z.ZodNumber, z.ZodNull]>>;
        tus_id: z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodNull]>>;
        tus_data: z.ZodOptional<z.ZodUnion<readonly [z.ZodRecord<z.ZodString, z.ZodAny>, z.ZodNull]>>;
    }, z.core.$strip>;
}, z.core.$strip>;
export declare const FileImportItemValidateSchema: z.ZodObject<{
    url: z.ZodString;
    file: z.ZodObject<{
        id: z.ZodOptional<z.ZodString>;
        storage: z.ZodOptional<z.ZodString>;
        filename_disk: z.ZodOptional<z.ZodString>;
        filename_download: z.ZodOptional<z.ZodString>;
        title: z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodNull]>>;
        type: z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodNull]>>;
        folder: z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodNull]>>;
        created_on: z.ZodOptional<z.ZodString>;
        uploaded_by: z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodNull]>>;
        uploaded_on: z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodNull]>>;
        modified_by: z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodNull]>>;
        modified_on: z.ZodOptional<z.ZodString>;
        charset: z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodNull]>>;
        filesize: z.ZodOptional<z.ZodNumber>;
        width: z.ZodOptional<z.ZodUnion<readonly [z.ZodNumber, z.ZodNull]>>;
        height: z.ZodOptional<z.ZodUnion<readonly [z.ZodNumber, z.ZodNull]>>;
        duration: z.ZodOptional<z.ZodUnion<readonly [z.ZodNumber, z.ZodNull]>>;
        embed: z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodNull]>>;
        description: z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodNull]>>;
        location: z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodNull]>>;
        tags: z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodNull]>>;
        metadata: z.ZodOptional<z.ZodUnion<readonly [z.ZodRecord<z.ZodString, z.ZodAny>, z.ZodNull]>>;
        focal_point_x: z.ZodOptional<z.ZodUnion<readonly [z.ZodNumber, z.ZodNull]>>;
        focal_point_y: z.ZodOptional<z.ZodUnion<readonly [z.ZodNumber, z.ZodNull]>>;
        tus_id: z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodNull]>>;
        tus_data: z.ZodOptional<z.ZodUnion<readonly [z.ZodRecord<z.ZodString, z.ZodAny>, z.ZodNull]>>;
    }, z.core.$strip>;
}, z.core.$strip>;
export declare const OperationItemInputSchema: z.ZodObject<{
    id: z.ZodOptional<z.ZodString>;
    name: z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodNull]>>;
    key: z.ZodOptional<z.ZodString>;
    type: z.ZodOptional<z.ZodString>;
    position_x: z.ZodOptional<z.ZodNumber>;
    position_y: z.ZodOptional<z.ZodNumber>;
    options: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodAny>>;
    resolve: z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodNull]>>;
    reject: z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodNull]>>;
    flow: z.ZodOptional<z.ZodString>;
    date_created: z.ZodOptional<z.ZodString>;
    user_created: z.ZodOptional<z.ZodString>;
}, z.core.$strip>;
export declare const OperationItemValidateSchema: z.ZodObject<{
    id: z.ZodOptional<z.ZodString>;
    name: z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodNull]>>;
    key: z.ZodOptional<z.ZodString>;
    type: z.ZodOptional<z.ZodString>;
    position_x: z.ZodOptional<z.ZodNumber>;
    position_y: z.ZodOptional<z.ZodNumber>;
    options: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodAny>>;
    resolve: z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodNull]>>;
    reject: z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodNull]>>;
    flow: z.ZodOptional<z.ZodString>;
    date_created: z.ZodOptional<z.ZodString>;
    user_created: z.ZodOptional<z.ZodString>;
}, z.core.$strip>;
export declare const FlowItemInputSchema: z.ZodObject<{
    id: z.ZodOptional<z.ZodString>;
    name: z.ZodOptional<z.ZodString>;
    icon: z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodNull]>>;
    color: z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodNull]>>;
    description: z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodNull]>>;
    status: z.ZodOptional<z.ZodEnum<{
        active: "active";
        inactive: "inactive";
    }>>;
    trigger: z.ZodOptional<z.ZodUnion<readonly [z.ZodEnum<{
        schedule: "schedule";
        operation: "operation";
        event: "event";
        webhook: "webhook";
        manual: "manual";
    }>, z.ZodNull]>>;
    options: z.ZodOptional<z.ZodUnion<readonly [z.ZodRecord<z.ZodString, z.ZodAny>, z.ZodNull]>>;
    operation: z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodNull]>>;
    operations: z.ZodOptional<z.ZodArray<z.ZodObject<{
        id: z.ZodOptional<z.ZodString>;
        name: z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodNull]>>;
        key: z.ZodOptional<z.ZodString>;
        type: z.ZodOptional<z.ZodString>;
        position_x: z.ZodOptional<z.ZodNumber>;
        position_y: z.ZodOptional<z.ZodNumber>;
        options: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodAny>>;
        resolve: z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodNull]>>;
        reject: z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodNull]>>;
        flow: z.ZodOptional<z.ZodString>;
        date_created: z.ZodOptional<z.ZodString>;
        user_created: z.ZodOptional<z.ZodString>;
    }, z.core.$strip>>>;
    date_created: z.ZodOptional<z.ZodString>;
    user_created: z.ZodOptional<z.ZodString>;
    accountability: z.ZodOptional<z.ZodUnion<readonly [z.ZodEnum<{
        all: "all";
        activity: "activity";
    }>, z.ZodNull]>>;
}, z.core.$strip>;
export declare const FlowItemValidateSchema: z.ZodObject<{
    id: z.ZodOptional<z.ZodString>;
    name: z.ZodOptional<z.ZodString>;
    icon: z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodNull]>>;
    color: z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodNull]>>;
    description: z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodNull]>>;
    status: z.ZodOptional<z.ZodEnum<{
        active: "active";
        inactive: "inactive";
    }>>;
    trigger: z.ZodOptional<z.ZodUnion<readonly [z.ZodEnum<{
        schedule: "schedule";
        operation: "operation";
        event: "event";
        webhook: "webhook";
        manual: "manual";
    }>, z.ZodNull]>>;
    options: z.ZodOptional<z.ZodUnion<readonly [z.ZodRecord<z.ZodString, z.ZodAny>, z.ZodNull]>>;
    operation: z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodNull]>>;
    operations: z.ZodOptional<z.ZodArray<z.ZodObject<{
        id: z.ZodOptional<z.ZodString>;
        name: z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodNull]>>;
        key: z.ZodOptional<z.ZodString>;
        type: z.ZodOptional<z.ZodString>;
        position_x: z.ZodOptional<z.ZodNumber>;
        position_y: z.ZodOptional<z.ZodNumber>;
        options: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodAny>>;
        resolve: z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodNull]>>;
        reject: z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodNull]>>;
        flow: z.ZodOptional<z.ZodString>;
        date_created: z.ZodOptional<z.ZodString>;
        user_created: z.ZodOptional<z.ZodString>;
    }, z.core.$strip>>>;
    date_created: z.ZodOptional<z.ZodString>;
    user_created: z.ZodOptional<z.ZodString>;
    accountability: z.ZodOptional<z.ZodUnion<readonly [z.ZodEnum<{
        all: "all";
        activity: "activity";
    }>, z.ZodNull]>>;
}, z.core.$strip>;
export declare const TriggerFlowInputSchema: z.ZodObject<{
    id: z.ZodUnion<readonly [z.ZodNumber, z.ZodString]>;
    collection: z.ZodString;
    keys: z.ZodOptional<z.ZodArray<z.ZodUnion<readonly [z.ZodNumber, z.ZodString]>>>;
    headers: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodAny>>;
    query: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodAny>>;
    data: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodAny>>;
}, z.core.$strip>;
export declare const TriggerFlowValidateSchema: z.ZodObject<{
    id: z.ZodUnion<readonly [z.ZodNumber, z.ZodString]>;
    collection: z.ZodString;
    keys: z.ZodOptional<z.ZodArray<z.ZodUnion<readonly [z.ZodNumber, z.ZodString]>>>;
    query: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodAny>>;
    headers: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodAny>>;
    data: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodAny>>;
}, z.core.$strict>;
export declare const FolderItemInputSchema: z.ZodObject<{
    id: z.ZodOptional<z.ZodUnion<readonly [z.ZodNumber, z.ZodString]>>;
    name: z.ZodString;
    parent: z.ZodOptional<z.ZodString>;
}, z.core.$strip>;
export declare const FolderItemValidateSchema: z.ZodObject<{
    id: z.ZodOptional<z.ZodUnion<readonly [z.ZodNumber, z.ZodString]>>;
    name: z.ZodString;
    parent: z.ZodOptional<z.ZodString>;
}, z.core.$strip>;
export declare const RelationItemInputSchema: z.ZodObject<{
    collection: z.ZodString;
    field: z.ZodString;
    related_collection: z.ZodUnion<readonly [z.ZodString, z.ZodNull]>;
    schema: z.ZodUnion<readonly [z.ZodRecord<z.ZodString, z.ZodAny>, z.ZodNull]>;
    meta: z.ZodUnion<readonly [z.ZodRecord<z.ZodString, z.ZodAny>, z.ZodNull]>;
}, z.core.$strip>;
export declare const ForeignKeySchema: z.ZodObject<{
    table: z.ZodString;
    column: z.ZodString;
    foreign_key_table: z.ZodString;
    foreign_key_column: z.ZodString;
    foreign_key_schema: z.ZodOptional<z.ZodString>;
    constraint_name: z.ZodUnion<readonly [z.ZodString, z.ZodNull]>;
    on_update: z.ZodUnion<readonly [z.ZodEnum<{
        "NO ACTION": "NO ACTION";
        RESTRICT: "RESTRICT";
        CASCADE: "CASCADE";
        "SET NULL": "SET NULL";
        "SET DEFAULT": "SET DEFAULT";
    }>, z.ZodNull]>;
    on_delete: z.ZodUnion<readonly [z.ZodEnum<{
        "NO ACTION": "NO ACTION";
        RESTRICT: "RESTRICT";
        CASCADE: "CASCADE";
        "SET NULL": "SET NULL";
        "SET DEFAULT": "SET DEFAULT";
    }>, z.ZodNull]>;
}, z.core.$strip>;
export declare const RelationItemValidateCreateSchema: z.ZodObject<{
    collection: z.ZodString;
    field: z.ZodString;
    related_collection: z.ZodNullable<z.ZodString>;
    schema: z.ZodOptional<z.ZodNullable<z.ZodObject<{
        table: z.ZodOptional<z.ZodString>;
        column: z.ZodOptional<z.ZodString>;
        foreign_key_table: z.ZodOptional<z.ZodString>;
        foreign_key_column: z.ZodOptional<z.ZodString>;
        foreign_key_schema: z.ZodOptional<z.ZodOptional<z.ZodString>>;
        constraint_name: z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodNull]>>;
        on_update: z.ZodOptional<z.ZodUnion<readonly [z.ZodEnum<{
            "NO ACTION": "NO ACTION";
            RESTRICT: "RESTRICT";
            CASCADE: "CASCADE";
            "SET NULL": "SET NULL";
            "SET DEFAULT": "SET DEFAULT";
        }>, z.ZodNull]>>;
        on_delete: z.ZodOptional<z.ZodUnion<readonly [z.ZodEnum<{
            "NO ACTION": "NO ACTION";
            RESTRICT: "RESTRICT";
            CASCADE: "CASCADE";
            "SET NULL": "SET NULL";
            "SET DEFAULT": "SET DEFAULT";
        }>, z.ZodNull]>>;
    }, z.core.$strip>>>;
    meta: z.ZodNullable<z.ZodObject<{
        id: z.ZodOptional<z.ZodNumber>;
        many_collection: z.ZodOptional<z.ZodString>;
        many_field: z.ZodOptional<z.ZodString>;
        one_collection: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        one_field: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        one_collection_field: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        one_allowed_collections: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString>>>;
        one_deselect_action: z.ZodOptional<z.ZodEnum<{
            nullify: "nullify";
            delete: "delete";
        }>>;
        junction_field: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        sort_field: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        system: z.ZodOptional<z.ZodOptional<z.ZodBoolean>>;
    }, z.core.$strip>>;
}, z.core.$strip>;
export declare const RelationItemValidateUpdateSchema: z.ZodOptional<z.ZodObject<{
    collection: z.ZodString;
    field: z.ZodString;
    related_collection: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    schema: z.ZodOptional<z.ZodNullable<z.ZodObject<{
        table: z.ZodOptional<z.ZodString>;
        column: z.ZodOptional<z.ZodString>;
        foreign_key_table: z.ZodOptional<z.ZodString>;
        foreign_key_column: z.ZodOptional<z.ZodString>;
        foreign_key_schema: z.ZodOptional<z.ZodOptional<z.ZodString>>;
        constraint_name: z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodNull]>>;
        on_update: z.ZodOptional<z.ZodUnion<readonly [z.ZodEnum<{
            "NO ACTION": "NO ACTION";
            RESTRICT: "RESTRICT";
            CASCADE: "CASCADE";
            "SET NULL": "SET NULL";
            "SET DEFAULT": "SET DEFAULT";
        }>, z.ZodNull]>>;
        on_delete: z.ZodOptional<z.ZodUnion<readonly [z.ZodEnum<{
            "NO ACTION": "NO ACTION";
            RESTRICT: "RESTRICT";
            CASCADE: "CASCADE";
            "SET NULL": "SET NULL";
            "SET DEFAULT": "SET DEFAULT";
        }>, z.ZodNull]>>;
    }, z.core.$strip>>>;
    meta: z.ZodOptional<z.ZodNullable<z.ZodObject<{
        id: z.ZodOptional<z.ZodNumber>;
        many_collection: z.ZodOptional<z.ZodString>;
        many_field: z.ZodOptional<z.ZodString>;
        one_collection: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        one_field: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        one_collection_field: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        one_allowed_collections: z.ZodOptional<z.ZodNullable<z.ZodArray<z.ZodString>>>;
        one_deselect_action: z.ZodOptional<z.ZodEnum<{
            nullify: "nullify";
            delete: "delete";
        }>>;
        junction_field: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        sort_field: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        system: z.ZodOptional<z.ZodOptional<z.ZodBoolean>>;
    }, z.core.$strip>>>;
}, z.core.$strip>>;
