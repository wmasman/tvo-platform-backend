import { z } from 'zod';
export declare const FilesValidateSchema: z.ZodDiscriminatedUnion<[z.ZodObject<{
    action: z.ZodLiteral<"read">;
    keys: z.ZodOptional<z.ZodArray<z.ZodUnion<readonly [z.ZodNumber, z.ZodString]>>>;
    query: z.ZodOptional<z.ZodObject<{
        fields: z.ZodOptional<z.ZodArray<z.ZodString>>;
        sort: z.ZodOptional<z.ZodArray<z.ZodString>>;
        filter: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodAny>>;
        limit: z.ZodOptional<z.ZodNumber>;
        offset: z.ZodOptional<z.ZodNumber>;
        page: z.ZodOptional<z.ZodNumber>;
        search: z.ZodOptional<z.ZodString>;
        deep: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodAny>>;
        alias: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
        aggregate: z.ZodOptional<z.ZodObject<{
            count: z.ZodArray<z.ZodString>;
            sum: z.ZodArray<z.ZodString>;
            avg: z.ZodArray<z.ZodString>;
            min: z.ZodArray<z.ZodString>;
            max: z.ZodArray<z.ZodString>;
        }, z.core.$strip>>;
        backlink: z.ZodOptional<z.ZodBoolean>;
        version: z.ZodOptional<z.ZodString>;
        versionRaw: z.ZodOptional<z.ZodBoolean>;
        export: z.ZodOptional<z.ZodString>;
        group: z.ZodOptional<z.ZodArray<z.ZodString>>;
    }, z.core.$strip>>;
}, z.core.$strict>, z.ZodObject<{
    action: z.ZodLiteral<"update">;
    data: z.ZodObject<{
        id: z.ZodOptional<z.ZodString>;
        storage: z.ZodOptional<z.ZodString>;
        filename_disk: z.ZodOptional<z.ZodString>;
        filename_download: z.ZodOptional<z.ZodString>;
        title: z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodNull]>>;
        type: z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodNull]>>;
        folder: z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodNull]>>;
        created_on: z.ZodOptional<z.ZodString>;
        uploaded_by: z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodNull]>>;
        uploaded_on: z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodNull]>>;
        modified_by: z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodNull]>>;
        modified_on: z.ZodOptional<z.ZodString>;
        charset: z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodNull]>>;
        filesize: z.ZodOptional<z.ZodNumber>;
        width: z.ZodOptional<z.ZodUnion<readonly [z.ZodNumber, z.ZodNull]>>;
        height: z.ZodOptional<z.ZodUnion<readonly [z.ZodNumber, z.ZodNull]>>;
        duration: z.ZodOptional<z.ZodUnion<readonly [z.ZodNumber, z.ZodNull]>>;
        embed: z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodNull]>>;
        description: z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodNull]>>;
        location: z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodNull]>>;
        tags: z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodNull]>>;
        metadata: z.ZodOptional<z.ZodUnion<readonly [z.ZodRecord<z.ZodString, z.ZodAny>, z.ZodNull]>>;
        focal_point_x: z.ZodOptional<z.ZodUnion<readonly [z.ZodNumber, z.ZodNull]>>;
        focal_point_y: z.ZodOptional<z.ZodUnion<readonly [z.ZodNumber, z.ZodNull]>>;
        tus_id: z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodNull]>>;
        tus_data: z.ZodOptional<z.ZodUnion<readonly [z.ZodRecord<z.ZodString, z.ZodAny>, z.ZodNull]>>;
    }, z.core.$strip>;
    keys: z.ZodOptional<z.ZodArray<z.ZodUnion<readonly [z.ZodNumber, z.ZodString]>>>;
    query: z.ZodOptional<z.ZodObject<{
        fields: z.ZodOptional<z.ZodArray<z.ZodString>>;
        sort: z.ZodOptional<z.ZodArray<z.ZodString>>;
        filter: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodAny>>;
        limit: z.ZodOptional<z.ZodNumber>;
        offset: z.ZodOptional<z.ZodNumber>;
        page: z.ZodOptional<z.ZodNumber>;
        search: z.ZodOptional<z.ZodString>;
        deep: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodAny>>;
        alias: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
        aggregate: z.ZodOptional<z.ZodObject<{
            count: z.ZodArray<z.ZodString>;
            sum: z.ZodArray<z.ZodString>;
            avg: z.ZodArray<z.ZodString>;
            min: z.ZodArray<z.ZodString>;
            max: z.ZodArray<z.ZodString>;
        }, z.core.$strip>>;
        backlink: z.ZodOptional<z.ZodBoolean>;
        version: z.ZodOptional<z.ZodString>;
        versionRaw: z.ZodOptional<z.ZodBoolean>;
        export: z.ZodOptional<z.ZodString>;
        group: z.ZodOptional<z.ZodArray<z.ZodString>>;
    }, z.core.$strip>>;
}, z.core.$strict>, z.ZodObject<{
    action: z.ZodLiteral<"delete">;
    keys: z.ZodArray<z.ZodUnion<readonly [z.ZodNumber, z.ZodString]>>;
}, z.core.$strict>, z.ZodObject<{
    action: z.ZodLiteral<"import">;
    data: z.ZodArray<z.ZodObject<{
        url: z.ZodString;
        file: z.ZodObject<{
            id: z.ZodOptional<z.ZodString>;
            storage: z.ZodOptional<z.ZodString>;
            filename_disk: z.ZodOptional<z.ZodString>;
            filename_download: z.ZodOptional<z.ZodString>;
            title: z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodNull]>>;
            type: z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodNull]>>;
            folder: z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodNull]>>;
            created_on: z.ZodOptional<z.ZodString>;
            uploaded_by: z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodNull]>>;
            uploaded_on: z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodNull]>>;
            modified_by: z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodNull]>>;
            modified_on: z.ZodOptional<z.ZodString>;
            charset: z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodNull]>>;
            filesize: z.ZodOptional<z.ZodNumber>;
            width: z.ZodOptional<z.ZodUnion<readonly [z.ZodNumber, z.ZodNull]>>;
            height: z.ZodOptional<z.ZodUnion<readonly [z.ZodNumber, z.ZodNull]>>;
            duration: z.ZodOptional<z.ZodUnion<readonly [z.ZodNumber, z.ZodNull]>>;
            embed: z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodNull]>>;
            description: z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodNull]>>;
            location: z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodNull]>>;
            tags: z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodNull]>>;
            metadata: z.ZodOptional<z.ZodUnion<readonly [z.ZodRecord<z.ZodString, z.ZodAny>, z.ZodNull]>>;
            focal_point_x: z.ZodOptional<z.ZodUnion<readonly [z.ZodNumber, z.ZodNull]>>;
            focal_point_y: z.ZodOptional<z.ZodUnion<readonly [z.ZodNumber, z.ZodNull]>>;
            tus_id: z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodNull]>>;
            tus_data: z.ZodOptional<z.ZodUnion<readonly [z.ZodRecord<z.ZodString, z.ZodAny>, z.ZodNull]>>;
        }, z.core.$strip>;
    }, z.core.$strip>>;
}, z.core.$strict>]>;
export declare const files: import("../types.js").ToolConfig<{
    action: "read";
    keys?: (string | number)[] | undefined;
    query?: {
        fields?: string[] | undefined;
        sort?: string[] | undefined;
        filter?: Record<string, any> | undefined;
        limit?: number | undefined;
        offset?: number | undefined;
        page?: number | undefined;
        search?: string | undefined;
        deep?: Record<string, any> | undefined;
        alias?: Record<string, string> | undefined;
        aggregate?: {
            count: string[];
            sum: string[];
            avg: string[];
            min: string[];
            max: string[];
        } | undefined;
        backlink?: boolean | undefined;
        version?: string | undefined;
        versionRaw?: boolean | undefined;
        export?: string | undefined;
        group?: string[] | undefined;
    } | undefined;
} | {
    action: "update";
    data: {
        id?: string | undefined;
        storage?: string | undefined;
        filename_disk?: string | undefined;
        filename_download?: string | undefined;
        title?: string | null | undefined;
        type?: string | null | undefined;
        folder?: string | null | undefined;
        created_on?: string | undefined;
        uploaded_by?: string | null | undefined;
        uploaded_on?: string | null | undefined;
        modified_by?: string | null | undefined;
        modified_on?: string | undefined;
        charset?: string | null | undefined;
        filesize?: number | undefined;
        width?: number | null | undefined;
        height?: number | null | undefined;
        duration?: number | null | undefined;
        embed?: string | null | undefined;
        description?: string | null | undefined;
        location?: string | null | undefined;
        tags?: string | null | undefined;
        metadata?: Record<string, any> | null | undefined;
        focal_point_x?: number | null | undefined;
        focal_point_y?: number | null | undefined;
        tus_id?: string | null | undefined;
        tus_data?: Record<string, any> | null | undefined;
    };
    keys?: (string | number)[] | undefined;
    query?: {
        fields?: string[] | undefined;
        sort?: string[] | undefined;
        filter?: Record<string, any> | undefined;
        limit?: number | undefined;
        offset?: number | undefined;
        page?: number | undefined;
        search?: string | undefined;
        deep?: Record<string, any> | undefined;
        alias?: Record<string, string> | undefined;
        aggregate?: {
            count: string[];
            sum: string[];
            avg: string[];
            min: string[];
            max: string[];
        } | undefined;
        backlink?: boolean | undefined;
        version?: string | undefined;
        versionRaw?: boolean | undefined;
        export?: string | undefined;
        group?: string[] | undefined;
    } | undefined;
} | {
    action: "delete";
    keys: (string | number)[];
} | {
    action: "import";
    data: {
        url: string;
        file: {
            id?: string | undefined;
            storage?: string | undefined;
            filename_disk?: string | undefined;
            filename_download?: string | undefined;
            title?: string | null | undefined;
            type?: string | null | undefined;
            folder?: string | null | undefined;
            created_on?: string | undefined;
            uploaded_by?: string | null | undefined;
            uploaded_on?: string | null | undefined;
            modified_by?: string | null | undefined;
            modified_on?: string | undefined;
            charset?: string | null | undefined;
            filesize?: number | undefined;
            width?: number | null | undefined;
            height?: number | null | undefined;
            duration?: number | null | undefined;
            embed?: string | null | undefined;
            description?: string | null | undefined;
            location?: string | null | undefined;
            tags?: string | null | undefined;
            metadata?: Record<string, any> | null | undefined;
            focal_point_x?: number | null | undefined;
            focal_point_y?: number | null | undefined;
            tus_id?: string | null | undefined;
            tus_data?: Record<string, any> | null | undefined;
        };
    }[];
}>;
